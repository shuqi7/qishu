{"version":3,"sources":["../../src/commands/export.js"],"names":["originalConfig","config","staging","debug","isBuild","incremental","process","env","NODE_ENV","REACT_STATIC_ENV","BABEL_ENV","REACT_STATIC_STAGING","REACT_STATIC_DEBUG","REACT_STATIC_INCREMENTAL","routes","console","log","clientStats","PrettyError","require","render","exit","onBuild"],"mappings":";;;;;;;;;AAAA;;;;;;;;;;;;;;;;;;;4BASe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,4EAMX,EANW,EACLA,cADK,SACbC,MADa,EAEbC,OAFa,SAEbA,OAFa,EAGbC,KAHa,SAGbA,KAHa,EAIbC,OAJa,SAIbA,OAJa,EAKbC,WALa,SAKbA,WALa;;AAOb;AACA,gBAAI,OAAOC,OAAO,CAACC,GAAR,CAAYC,QAAnB,KAAgC,WAAhC,IAA+C,CAACL,KAApD,EAA2D;AACzDG,cAAAA,OAAO,CAACC,GAAR,CAAYC,QAAZ,GAAuB,YAAvB;AACD;;AAEDF,YAAAA,OAAO,CAACC,GAAR,CAAYE,gBAAZ,GAA+B,YAA/B;AACAH,YAAAA,OAAO,CAACC,GAAR,CAAYG,SAAZ,GAAwB,YAAxB;;AAEA,gBAAIR,OAAJ,EAAa;AACXI,cAAAA,OAAO,CAACC,GAAR,CAAYI,oBAAZ,GAAmC,MAAnC;AACD;;AAED,gBAAIR,KAAJ,EAAW;AACTG,cAAAA,OAAO,CAACC,GAAR,CAAYK,kBAAZ,GAAiC,MAAjC;AACD;;AAED,gBAAIP,WAAJ,EAAiB;AACfC,cAAAA,OAAO,CAACC,GAAR,CAAYM,wBAAZ,GAAuC,MAAvC;AACD;;AAzBY,gBA8BRT,OA9BQ;AAAA;AAAA;AAAA;;AAAA;AAAA,mBA+BI,uBAAUJ,cAAV,CA/BJ;;AAAA;AA+BXC,YAAAA,MA/BW;AAgCXA,YAAAA,MAAM,CAACD,cAAP,GAAwBA,cAAxB;AAhCW;AAAA,mBAiCI,2BAAcC,MAAd,EAAsB;AAAEI,cAAAA,WAAW,EAAXA;AAAF,aAAtB,CAjCJ;;AAAA;AAiCXJ,YAAAA,MAjCW;AAAA;AAAA,mBAkCL,8BAAiBA,MAAjB,EAAyB;AAAEI,cAAAA,WAAW,EAAXA;AAAF,aAAzB,CAlCK;;AAAA;AAAA;AAAA;;AAAA;AAoCXJ,YAAAA,MAAM,GAAGD,cAAT;;AApCW;AAAA,gBAuCRC,MAAM,CAACa,MAvCC;AAAA;AAAA;AAAA;;AAAA;AAAA,mBAwCL,2BAAcb,MAAd,CAxCK;;AAAA;AA2Cb,gBAAIE,KAAJ,EAAW;AACTY,cAAAA,OAAO,CAACC,GAAR,CAAY,oCAAZ;AACAD,cAAAA,OAAO,CAACC,GAAR,CAAYf,MAAZ;AACD;;AA9CY;AAAA,mBAgDa,+BAAkBA,MAAlB,CAhDb;;AAAA;AAgDPgB,YAAAA,WAhDO;AAAA;AAAA;AAAA,mBAmDL,0BAAa;AACjBhB,cAAAA,MAAM,EAANA,MADiB;AAEjBgB,cAAAA,WAAW,EAAXA,WAFiB;AAGjBZ,cAAAA,WAAW,EAAXA;AAHiB,aAAb,CAnDK;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAyDLa,YAAAA,WAzDK,GAyDSC,OAAO,CAAC,cAAD,CAzDhB;AA0DXJ,YAAAA,OAAO,CAACC,GAAR,CAAY,IAAIE,WAAJ,GAAkBE,MAAlB,aAAZ;AACAd,YAAAA,OAAO,CAACe,IAAR,CAAa,CAAb;;AA3DW;AAAA;AAAA,mBA8DP,sBAAS;AAAEpB,cAAAA,MAAM,EAANA;AAAF,aAAT,CA9DO;;AAAA;AAAA,iBAgETA,MAAM,CAACqB,OAhEE;AAAA;AAAA;AAAA;;AAAA;AAAA,mBAiELrB,MAAM,CAACqB,OAAP,CAAe;AAAErB,cAAAA,MAAM,EAANA;AAAF,aAAf,CAjEK;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G","sourcesContent":["import {\n  exportRoutes,\n  buildXML,\n  prepareRoutes,\n  getConfig,\n  importClientStats,\n  extractTemplates,\n} from '../static'\n\nexport default async ({\n  config: originalConfig,\n  staging,\n  debug,\n  isBuild,\n  incremental,\n} = {}) => {\n  // ensure ENV variables are set\n  if (typeof process.env.NODE_ENV === 'undefined' && !debug) {\n    process.env.NODE_ENV = 'production'\n  }\n\n  process.env.REACT_STATIC_ENV = 'production'\n  process.env.BABEL_ENV = 'production'\n\n  if (staging) {\n    process.env.REACT_STATIC_STAGING = 'true'\n  }\n\n  if (debug) {\n    process.env.REACT_STATIC_DEBUG = 'true'\n  }\n\n  if (incremental) {\n    process.env.REACT_STATIC_INCREMENTAL = 'true'\n  }\n\n  let config\n\n  // Allow config location to be overriden\n  if (!isBuild) {\n    config = await getConfig(originalConfig)\n    config.originalConfig = originalConfig\n    config = await prepareRoutes(config, { incremental })\n    await extractTemplates(config, { incremental })\n  } else {\n    config = originalConfig\n  }\n\n  if (!config.routes) {\n    await prepareRoutes(config)\n  }\n\n  if (debug) {\n    console.log('DEBUG - Resolved static.config.js:')\n    console.log(config)\n  }\n\n  const clientStats = await importClientStats(config)\n\n  try {\n    await exportRoutes({\n      config,\n      clientStats,\n      incremental,\n    })\n  } catch (e) {\n    const PrettyError = require('pretty-error')\n    console.log(new PrettyError().render(e))\n    process.exit(1)\n  }\n\n  await buildXML({ config })\n\n  if (config.onBuild) {\n    await config.onBuild({ config })\n  }\n}\n"],"file":"export.js"}