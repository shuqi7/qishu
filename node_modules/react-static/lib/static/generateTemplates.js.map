{"version":3,"sources":["../../src/static/generateTemplates.js"],"names":["config","templates","paths","reactStaticUniversalPath","process","env","REACT_STATIC_UNIVERSAL_PATH","split","join","productionImports","developmentImports","productionTemplates","map","template","index","chunkName","DIST","startsWith","ROOT","developmentTemplates","file","NODE_ENV","JSON","stringify","dynamicRoutesPath","path","REACT_STATIC_TEMPLATES_PATH","fs","remove","outputFile"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;;;;;;;;;;;;;;;;;;4BAEe,iBAAMA,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AACLC,YAAAA,SADK,GACgBD,MADhB,CACLC,SADK,EACMC,KADN,GACgBF,MADhB,CACME,KADN,EAGb;AACA;;AACMC,YAAAA,wBALO,GAKoBC,OAAO,CAACC,GAAR,CAAYC,2BAAZ,CAAwCC,KAAxC,CAC/B,IAD+B,EAE/BC,IAF+B,CAE1B,GAF0B,CALpB;AASPC,YAAAA,iBATO,2DAS8DN,wBAT9D;AAUPO,YAAAA,kBAVO,GAUc,EAVd;AAYPC,YAAAA,mBAZO,iRAuBbV,SAAS,CACNW,GADH,CACO,UAACC,QAAD,EAAWC,KAAX,EAAqB;AACxB,kBAAIC,SAAS,GAAG,EAAhB,CADwB,CAGxB;AACA;;AACA,kBAAI,CAACb,KAAK,CAACc,IAAN,CAAWC,UAAX,CAAsBf,KAAK,CAACgB,IAA5B,CAAL,EAAwC;AACtCH,gBAAAA,SAAS,oCAA4B,qCAAkBF,QAAlB,CAA5B,UAAT;AACD;;AAED,uCAAkBC,KAAlB,kCAA+CD,QAA/C,cAA2DE,SAA3D;AACD,aAXH,EAYGP,IAZH,CAYQ,IAZR,CAvBa;AAsCPW,YAAAA,oBAtCO,GAsCgBlB,SAAS,CACnCW,GAD0B,CACtB,UAACC,QAAD,EAAWC,KAAX;AAAA,wCAAiCA,KAAjC,oBAAgDD,QAAhD;AAAA,aADsB,EAE1BL,IAF0B,CAErB,IAFqB,CAtChB;AA0CPY,YAAAA,IA1CO,eA4CXhB,OAAO,CAACC,GAAR,CAAYgB,QAAZ,KAAyB,YAAzB,GACIZ,iBADJ,GAEIC,kBA9CO,iBAkDXN,OAAO,CAACC,GAAR,CAAYgB,QAAZ,KAAyB,YAAzB,GACIV,mBADJ,GAEIQ,oBApDO,sDAyDXlB,SAAS,CAACW,GAAV,CAAc,UAACC,QAAD,EAAWC,KAAX;AAAA,gCAAyBD,QAAzB,kBAAyCC,KAAzC;AAAA,aAAd,EAAgEN,IAAhE,CAAqE,KAArE,CAzDW,oDA4DmBc,IAAI,CAACC,SAAL,CAAetB,SAAS,CAAC,CAAD,CAAxB,CA5DnB;AA+DPuB,YAAAA,iBA/DO,GA+DaC,cAAKjB,IAAL,CAAUJ,OAAO,CAACC,GAAR,CAAYqB,2BAAtB,CA/Db;AAAA;AAAA,mBAgEPC,iBAAGC,MAAH,CAAUJ,iBAAV,CAhEO;;AAAA;AAAA;AAAA,mBAiEPG,iBAAGE,UAAH,CAAcL,iBAAd,EAAiCJ,IAAjC,CAjEO;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G","sourcesContent":["import path from 'path'\nimport fs from 'fs-extra'\nimport { chunkNameFromFile } from '../utils/chunkBuilder'\n\nexport default async config => {\n  const { templates, paths } = config\n\n  // convert Windows-style path separators to the Unix style to ensure sure the\n  // string literal is valid and doesn't contain escaped characters\n  const reactStaticUniversalPath = process.env.REACT_STATIC_UNIVERSAL_PATH.split(\n    '\\\\'\n  ).join('/')\n\n  const productionImports = `import universal, { setHasBabelPlugin } from '${reactStaticUniversalPath}'`\n  const developmentImports = ''\n\n  const productionTemplates = `\nsetHasBabelPlugin()\n\nconst universalOptions = {\n  loading: () => null,\n  error: props => {\n    console.error(props.error);\n    return <div>An error occurred loading this page's template. More information is available in the console.</div>;\n  },\n}\n\n${templates\n    .map((template, index) => {\n      let chunkName = ''\n\n      // relative resolving produces the wrong path, a \"../\" is missing\n      // as the files looks equal, we simple use an absolute path then\n      if (!paths.DIST.startsWith(paths.ROOT)) {\n        chunkName = `/* webpackChunkName: \"${chunkNameFromFile(template)}\" */`\n      }\n\n      return `const t_${index} = universal(import('${template}'${chunkName}), universalOptions)`\n    })\n    .join('\\n')}\n`\n\n  const developmentTemplates = templates\n    .map((template, index) => `import t_${index} from '${template}'`)\n    .join('\\n')\n\n  const file = `\n${\n    process.env.NODE_ENV === 'production'\n      ? productionImports\n      : developmentImports\n  }\n\n${\n    process.env.NODE_ENV === 'production'\n      ? productionTemplates\n      : developmentTemplates\n  }\n\n// Template Map\nexport default {\n  ${templates.map((template, index) => `'${template}': t_${index}`).join(',\\n')}\n}\n\nexport const notFoundTemplate = ${JSON.stringify(templates[0])}\n`\n\n  const dynamicRoutesPath = path.join(process.env.REACT_STATIC_TEMPLATES_PATH)\n  await fs.remove(dynamicRoutesPath)\n  await fs.outputFile(dynamicRoutesPath, file)\n}\n"],"file":"generateTemplates.js"}