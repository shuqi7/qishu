{"version":3,"sources":["../../../src/browser/components/Routes.js"],"names":["RoutePathContext","React","createContext","withRoutePathContext","Comp","props","routePath","componentCache","WeakMap","with404Prop","Component","has","get","WrappedComponent","set","unmounted","forceUpdate","Loader","templatesByPath","is404","templateErrorByPath","Error","Promise","all","priority","resolve","setTimeout","process","env","REACT_STATIC_MIN_LOAD_TIME","safeForceUpdate","templateUpdated","cb","offLocationChange","children","staticInfo","path","getComponentForPath","Spinner"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\n//\nimport {\n  templatesByPath,\n  templateErrorByPath,\n  templateUpdated,\n  prefetch,\n  getCurrentRoutePath,\n} from '../'\nimport { withStaticInfo } from './StaticInfo'\nimport { getRoutePath, isSSR } from '../utils'\nimport onLocation from '../utils/Location'\nimport Spinner from './Spinner'\n\nconst RoutePathContext = React.createContext()\n\nexport const withRoutePathContext = Comp => props => (\n  <RoutePathContext.Consumer>\n    {routePath => <Comp {...props} routePath={routePath} />}\n  </RoutePathContext.Consumer>\n)\n\nconst componentCache = new WeakMap()\nfunction with404Prop(Component) {\n  // If the wrapped Component is currently in cached, return it from cache.\n  if (componentCache.has(Component)) {\n    return componentCache.get(Component)\n  }\n\n  // Otherwise, create a new wrapped Component...\n  const WrappedComponent = props => <Component is404 {...props} />\n\n  // ...and cache it\n  componentCache.set(Component, WrappedComponent)\n  return WrappedComponent\n}\n\nexport default withStaticInfo(\n  class Routes extends Component {\n    static defaultProps = {\n      Loader: Spinner,\n    }\n    componentDidMount() {\n      templateUpdated.cb = () => this.safeForceUpdate()\n      this.offLocationChange = onLocation(() => this.safeForceUpdate())\n    }\n    componentWillUnmount() {\n      this.unmounted = true\n      if (this.offLocationChange) this.offLocationChange()\n    }\n    safeForceUpdate = () => {\n      if (this.unmounted) {\n        return\n      }\n      this.forceUpdate()\n    }\n    getComponentForPath = routePath => {\n      const { Loader } = this.props\n\n      // Clean the path\n      routePath = getRoutePath(routePath)\n\n      // Try and get the component\n      let Comp = templatesByPath[routePath]\n\n      // Detect a 404\n      let is404 = routePath === '404'\n\n      // Detect a failed template\n      if (templateErrorByPath[routePath]) {\n        is404 = true\n        Comp = templatesByPath['404']\n      }\n\n      // Detect an unloaded template\n      // TODO:suspense - This will become a suspense resource\n      if (!Comp) {\n        if (is404) {\n          throw new Error(\n            'This page template could not be found and a 404 template could not be found to fall back on. This means something is terribly wrong and you should probably file an issue!'\n          )\n        }\n        ;(async () => {\n          await Promise.all([\n            prefetch(routePath, { priority: true }),\n            new Promise(resolve =>\n              setTimeout(resolve, process.env.REACT_STATIC_MIN_LOAD_TIME)\n            ),\n          ])\n          this.safeForceUpdate()\n        })()\n        return Loader\n      }\n\n      return is404 ? with404Prop(Comp) : Comp\n    }\n\n    render() {\n      const { children, staticInfo } = this.props\n\n      const routePath = isSSR() ? staticInfo.path : getCurrentRoutePath()\n      const Comp = this.getComponentForPath(routePath)\n\n      return (\n        <RoutePathContext.Provider value={routePath}>\n          {children ? (\n            children({\n              routePath,\n              getComponentForPath: this.getComponentForPath,\n            })\n          ) : (\n            <Comp />\n          )}\n        </RoutePathContext.Provider>\n      )\n    }\n  }\n)\n"],"file":"Routes.js"}